Preguntas Piscina Tipo 0 (baño libre)
--------------------------------------

1- No se utiliza el método synchronized ya que a pesar de que Pool es un objeto compartido, al no existir ningún atributo que se modifique al entrar o salir nadadores, no es necesario.

2- Como hemos mencionado, al no haber ninguna variable compartida, no se podría dar la llamada condición de carrera.

3- Con ninguna variable compartida ya que no es necesario hacer seguimiento de nada pues no hay ninguna condición a cumplir

4- Cualquier instructor y cualquier niño pueden pasar de "resting" a "swimming" ya que, no existe ninguna condición que limite u obligue a los hilos "instructor" y "niño" a esperar.


Preguntas Piscina Tipo 1 
-------------------------

Ejercicio 1.1
> kidSwims(): Espera si no hay instructores nadando, modifica variable "kidsSwimming" y no avisa a nadie
> kidRests(): No espera a nada, modifica variable "kidsSwimming" y avisa a instructores waiting to rest
> instructorSwims(): No espera a nada, modifica variable "instructorsSwimming" y avisa a niños waiting to swim
> instructorRests(): Espera si hay niños nadando, modifica variable "instructorsSwimming" y no avisa a nadie

1- En este caso si que podrían darse condiciones de carrera por lo que el uso de synchronized es obligatorio si queremos evitar estados inconsistentes

2- Si que se pueden producir ya que las variables "kidsSwimming" y "instructorsSwimming" se comparten entre los hilos

3- Hemos representado el estado interno de la piscina con 2 variables independientes que representan el número de niños y el número de instructores que están nadando en este momento

4- Hemos usado notifyAll(), de haber usado notify() solo hubiese avisado a un hilo en concreto, por lo que en algunas circunstancias algún hilo se quedarían bloqueados

5- Hemos empleado notifyAll() en todos los métodos, aunque solo sería necesario en los métodos que necesiten esperar tales como kidSwims() y instructorRest()


Preguntas Piscina Tipo 2
--------------------------

Ejercicio 2.1
> kidSwims(): Espera si no hay instructores nadando y si el número de niños es 2 * número de instructores, modifica variable "kidsSwimming" y no avisa a nadie
>kidRests(): No espera a nadie, modifica variable "kidsSwimming" y avisa a instructores waiting to rest
>instructorSwims(): No espera a nadie, modifica variable "instructorsSwimming" y avisa a kids waiting to swim
>instructorRests(): Espera a que no haya kids en la piscina, modifica variable "instructorsSwimming" y no avisa a nadie


